---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import { BLOG_TITLE } from "./constants";
import { formatDate } from "../utils/dates";
import { calculateReadingTime } from "../utils/misc";
import type { Post } from "../types";

const allPosts = await getCollection("posts");
---

<Layout title={BLOG_TITLE}>
  <main>
    {
      allPosts
        .filter((post: Post) => !post.data.draft)
        .map(async (post: Post) => {
          const href = "/blog/" + post.slug;
          const date = new Date(post.data.date);
          const formattedDate = formatDate(date);
          const readingTime = calculateReadingTime(post.body);
          const firstParagraph = post.body.split('\n\n')[0] || post.body.split('\n')[0] || '';

          const cleanText = post.body
            .replace(/\[([^\]]+)\]\([^)]+\)/g, '$1')
            .replace(new RegExp('\\x60\\x60\\x60[\\s\\S]*?\\x60\\x60\\x60', 'g'), '')
            .replace(/[#*_\x60]/g, '')
            .replace(/[*_\x60]/g, '')
            .replace(/\n+/g, ' ')
            .trim();

          const maxLengthMobile = 100;
          const maxLengthDesktop = 200;
          const previewTextMobile = cleanText.length > maxLengthMobile 
            ? cleanText.substring(0, maxLengthMobile) + "..." 
            : cleanText;
          const previewTextDesktop = cleanText.length > maxLengthDesktop 
            ? cleanText.substring(0, maxLengthDesktop) + "..." 
            : cleanText;

          const { Content } = await post.render();

          return (
            <div class="flex flex-col mb-8">
              <a
                id="post-title"
                class="hover:underline hover:text-[#424949]"
                href={href}
              >
                {post.data.title}
              </a>
              <a id="post-date" class="mt-1">
                {formattedDate} -
                <span id="reading-time" class="ml-1">
                  {readingTime} m read
                </span>
              </a>
              <div
                id="post-preview"
                class="mt-4 overflow-hidden"
              >
                <span class="block sm:hidden">{previewTextMobile}</span>
                <span class="hidden sm:block">{previewTextDesktop}</span>
              </div>
            </div>
          );
        })
    }
  </main>
</Layout>

<style>
  nav #logo {
    font-family: "Pixel Code Light";
    font-size: 36px;
  }

  nav #right-navbar a {
    font-family: "Noto Serif Regular";
    font-size: 24px;
    font-weight: regular;
  }

  #post-title {
    font-family: "Noto Serif Regular";
    font-size: 24px;
  }

  :global(html:not(.dark):not(.retro) #post-title) {
    color: #000000;
  }

  :global(html:not(.dark):not(.retro) #post-title:visited) {
    color: #000000;
  }

  :global(html.retro #post-date) {
    color: #f7f7f7;
  }

  :global(html.retro #post-title) {
    color: #000000;
  }

  :global(html.retro #post-title:visited) {
    color: #000000;
  }

  :global(html.retro #post-title:hover) {
    color: #000000;
  }

  :global(html.retro #post-preview) {
    color: #1f1f1f;
  }

  @media (min-width: 640px) {
    #post-title {
      font-size: 30px;
    }
  }

  #post-date {
    font-family: "IBM Plex Mono", monospace;
    font-size: 16px;
    font-weight: 400;
    color: #929292;
  }

  #post-preview {
    font-family: "IBM Plex Mono", monospace;
    font-size: 16px;
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
    line-height: 1.4;
  }
</style>
