---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { formatDate } from "../../utils/dates";

interface Props {
	post: CollectionEntry<"posts">;
}

const isDarkTheme = false;

export async function getStaticPaths() {
	const blogPosts = await getCollection("posts");
	return blogPosts.map((post) => ({
		params: { slug: post.slug },
		props: { post },
	}));
}

const { post } = Astro.props;
const { Content } = await post.render();
const hasImage = post.data.cover;

const date = new Date(post.data.date);
const formattedDate = formatDate(date);
---

<Layout title={post.data.title}>
	<div class="flex flex-col items-center justify-center min-h-screen mt-8">
		<article
			class={`prose ${isDarkTheme ? "dark:prose-invert" : "prose-stone"} w-full max-w-3xl`}
		>
			{
				hasImage && (
					<Image
						class="object-cover object-center !m-0 aspect-square block"
						src={post.data.cover}
						alt={post.data.title}
						width={600}
						height={600}
					/>
				)
			}
			<h1 id="title">
				{post.data.title}
			</h1>
			<a id="post-date">
				{formattedDate}
			</a>
			<div id="post-content">
				<Content />
			</div>
		</article>
	</div>
</Layout>

<style>
	#title {
		font-family: "Noto Serif Georgian";
		font-size: 30px;
		margin-bottom: 4px;
	}

	#post-date {
		font-family: "IBM Plex Mono", monospace;
		font-size: 14px;
		font-weight: 400;
		color: #929292;
		text-decoration: none;
	}

	#post-preview {
		font-family: "IBM Plex Mono", monospace;
		font-size: 14px;
	}

	.prose {
		font-family: "IBM Plex Mono", monospace;
		font-size: 14px;
		max-width: none;
		overflow-wrap: break-word;
	}
</style>
