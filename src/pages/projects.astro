---
import Layout from "../layouts/Layout.astro";
import LangColorBar from "../components/LangColorBar.astro";
import {
  getRepoInfo,
  getRepoLanguages,
  type Language,
} from "./api/getGithubRepository";
import { normalizeCase } from "../utils/misc";

type Project = {
  name: string;
  description: string;
  url: string;
  languages: Language[];
};

const projectNames = [
  "nu-alias-converter",
  "git-tellme",
  "rund",
  "marcelarie.com",
];

const fetchProjects = async () => {
  try {
    const projects = await Promise.all(
      // TODO: Consider querying repos by topic (e.g. "showcase-in-blog") instead of hardcoding names.
      // This would allow managing the displayed projects directly on GitHub.
      // Problem: can't order by creation date, `updated`  seems to be the best option.
      // Example: const repos = await getReposByTopic("marcelarie", "showcase-in-blog");
      projectNames.map(async (project) => {
        const data = await getRepoInfo("marcelarie", project);
        const languages = await getRepoLanguages("marcelarie", project);

        const shouldNormalize = data.name && !data.name.includes(".com");
        const name = shouldNormalize ? normalizeCase(data.name) : data.name;

        return {
          name: name,
          description: data.description,
          url: data.html_url,
          languages,
        };
      }),
    );
    return projects;
  } catch (error) {
    console.error("Error fetching projects:", error);
    return [];
  }
};

const projects: Project[] = await fetchProjects();
---

<Layout title="Projects">
  {
    projects.length > 0 ? (
      projects.map((project) => (
        <div class="flex flex-col mb-8">
          <a
            id="project-title"
            class="hover:underline hover:text-blue-500"
            target="_blank"
            rel="noopener"
            href={project.url}
          >
            {project.name}
          </a>
          <div class="md:w-96 mt-1 mb-2">
            <LangColorBar
              languages={project.languages}
              projectUrl={project.url}
            />
          </div>
          <p>{project.description}</p>
        </div>
      ))
    ) : (
      <p>No projects available or failed to load.</p>
    )
  }
</Layout>

<style>
  #project-title {
    font-family: "Noto Serif Georgian";
    font-size: 24px;
    /* font-family: "IBM Plex Mono", monospace; */
    /* font-size: 20px; */
    text-decoration: none;
  }
</style>
