---
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import "../global-styles.astro";

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<script>
	const themeToggleBtn = document.getElementById("theme-toggle");
	const rootElement = document.documentElement;
	const themes = ["light", "dark", "retro"];
	let themeIndex = 0;

	const getCurrentTheme = () => {
		if (rootElement.classList.contains("dark")) {
			return "dark";
		}
		if (rootElement.classList.contains("retro")) {
			return "retro";
		}
		return "light";
	};

	const applyTheme = (theme) => {
		rootElement.classList.remove("dark", "retro");
		if (theme === "dark") {
			rootElement.classList.add("dark");
		} else if (theme === "retro") {
			rootElement.classList.add("retro");
		}
		localStorage.setItem("theme", theme);
		const index = themes.indexOf(theme);
		themeIndex = index === -1 ? 0 : index;
		if (themeToggleBtn) {
			themeToggleBtn.dataset.theme = theme;
		}
	};

	const initializeTheme = () => {
		const currentTheme = getCurrentTheme();
		const storedTheme = localStorage.getItem("theme");
		if (storedTheme && themes.includes(storedTheme)) {
			applyTheme(storedTheme);
			return storedTheme;
		}
		applyTheme(currentTheme);
		return currentTheme;
	};

	document.addEventListener("DOMContentLoaded", () => {
		const initialTheme = initializeTheme();
		if (themeToggleBtn) {
			themeToggleBtn.dataset.theme = initialTheme;
			themeToggleBtn.addEventListener("click", () => {
				const nextTheme = themes[(themeIndex + 1) % themes.length];
				applyTheme(nextTheme);
			});
		}
	});
</script>

<html lang="en">
	<head>
		<script is:inline>
			(function () {
				var savedTheme = localStorage.getItem("theme");

				function applyTheme(theme) {
					document.documentElement.classList.remove("dark", "retro");
					if (theme === "dark") {
						document.documentElement.classList.add("dark");
					}
					if (theme === "retro") {
						document.documentElement.classList.add("retro");
					}
				}

				function checkSystemThemePreferences() {
					var prefersDark = window.matchMedia(
						"(prefers-color-scheme: dark)",
					).matches;
					if (prefersDark) {
						applyTheme("dark");
					}
				}

				if (savedTheme) {
					applyTheme(savedTheme);
				} else {
					checkSystemThemePreferences();
				}
			})();
		</script>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class=`min-h-screen dark:bg-[#000000] dark:text-white`>
		<div
			class="max-w-3xl mx-auto px-8 flex flex-col min-h-screen sm:w-full"
		>
			<Navbar />
			<slot />
			<Footer />
		</div>
	</body>

	<style is:global>
		:root {
			--accent: 136, 58, 234;
			--accent-light: 224, 204, 250;
			--accent-dark: 49, 10, 101;
			--accent-gradient: linear-gradient(
				45deg,
				rgb(var(--accent)),
				rgb(var(--accent-light)) 30%,
				white 60%
			);
		}
		html {
			font-family: system-ui, sans-serif;
			/* background: #13151a; */
			background: #ffffff;
		}
		code {
			font-family: "IBM Plex Mono", monospace !important;
			/* font-size: 14px; */
		}

		html,
		body {
			overflow-x: hidden;
		}

		/* TODO: Find a better way to style the code blocks */
		.prose
			:where(pre):not(
				:where([class~="not-prose"], [class~="not-prose"] *)
			) {
			/* background-color: #f0f0f0 !important; */
			border-radius: 0rem !important;
		}

		.dark .astro-code {
			/* background-color: #111111 !important; */
			background-color: var(--shiki-dark-bg) !important;
		}

		html:not(.dark):not(.retro) a {
			color: #0000ee;
		}

		html:not(.dark):not(.retro) a:hover {
			color: #ff0000;
		}

		html:not(.dark):not(.retro) a:visited {
			color: #551a8b;
		}

		html:not(.dark):not(.retro) nav #logo,
		html:not(.dark):not(.retro) nav #logo:visited {
			color: #0000ee;
		}

		html:not(.dark):not(.retro) nav #right-navbar a,
		html:not(.dark):not(.retro) nav #right-navbar a:visited {
			color: inherit;
		}

		html:not(.dark):not(.retro) footer a:visited {
			color: #0000ee;
		}

		html.retro {
			background-color: #8c8c8c;
			color: #000000;
			--accent: 140, 140, 140;
			--accent-light: 163, 163, 163;
			--accent-dark: 112, 112, 112;
			--accent-gradient: linear-gradient(45deg, #9c9c9c, #c5c5c5 60%);
		}

		html.retro body {
			background-color: #8c8c8c;
			color: #000000;
		}

		html.retro body > div {
			background-color: #a3a3a3;
			border: 1px solid #6f6f6f;
			box-shadow: 0 0 0 1px #c1c1c1 inset;
		}

		html.retro a {
			color: #00ff00;
		}

		html.retro a:hover {
			color: #00cc00;
		}

		html.retro a:visited {
			color: #424949;
		}

		html.retro nav #logo,
		html.retro nav #logo:visited {
			color: #00ff00;
		}

		html.retro nav #right-navbar a,
		html.retro nav #right-navbar a:visited {
			color: #000000;
		}

		html.retro footer a:visited {
			color: #424949;
		}

		html.retro .astro-code {
			background-color: #ffffff !important;
			border: 1px solid #00ff00 !important;
			color: #000000 !important;
		}

		html.retro .copy-code {
			background-color: #c5c5c5;
			border: 1px solid #00ff00;
		}

		html.retro .copy-code:hover {
			background-color: #c0c0c0;
		}

		html.retro .retro-image-border {
			border-color: #00ff00 !important;
		}

		#theme-toggle .theme-icon {
			display: none;
		}

		#theme-toggle svg {
			display: block;
			width: 18px;
			height: 18px;
		}

		html:not(.dark):not(.retro) #theme-toggle .theme-icon-dark {
			display: inline;
		}

		html.dark #theme-toggle .theme-icon-retro {
			display: inline;
		}

		html.retro #theme-toggle .theme-icon-light {
			display: inline;
		}

		.astro-code {
			font-size: 14px !important;
			border: 1px solid #0000ee !important;
			/* border: 1px solid #000 !important; */
		}
		/*astro-code:hover { */
		/*   border: 1px solid #000 !important; */
		/*} */

		.dark .astro-code,
		.dark .astro-code span {
			color: var(--shiki-dark) !important;
			font-style: var(--shiki-dark-font-style) !important;
			font-weight: var(--shiki-dark-font-weight) !important;
			text-decoration: var(--shiki-dark-text-decoration) !important;
			border: none !important;
		}

		.copy-code {
			position: absolute;
			top: 0;
			right: 0;
			padding: 0rem 0.3rem;
			cursor: pointer;
		}

		.dark .copy-code {
			border: none;
		}

		.copy-code:hover {
			background-color: #ebebeb;
		}

		.dark .copy-code:hover {
			background-color: #2d2d2d;
		}
	</style>
</html>
